name: Valctk News Bot

on:
  schedule:
    - cron: "*/30 * * * *"     # RSS: her 30 dk (UTC)
    - cron: "5 15 * * 1-5"     # Döviz/Altın: hafta içi 18:05 TR ≈ 15:05 UTC
  workflow_dispatch: {}

jobs:
  rss:
    if: github.event.schedule == '*/30 * * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
      API_SECRET: ${{ secrets.API_SECRET }}
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-${{ runner.os }}-
      - run: pip install -r requirements.txt
      - uses: actions/cache@v4
        with:
          path: rss_state.json
          key: rss-state-${{ github.run_id }}
          restore-keys: rss-state-
      - run: python -u auto_rss_bot.py --max-posts 2 --per-feed 2
      - if: always()
        uses: actions/cache/save@v4
        with:
          path: rss_state.json
          key: rss-state-${{ github.run_id }}

  fx:
    if: github.event.schedule == '5 15 * * 1-5' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
      API_SECRET: ${{ secrets.API_SECRET }}
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-${{ runner.os }}-
      - run: pip install -r requirements.txt
      - uses: actions/cache@v4
        with:
          path: fx_state.json
          key: fx-state-${{ github.run_id }}
          restore-keys: fx-state-
      - run: python -u auto_fx_bot.py
      - if: always()
        uses: actions/cache/save@v4
        with:
          path: fx_state.json
          key: fx-state-${{ github.run_id }}
